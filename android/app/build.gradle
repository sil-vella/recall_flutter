plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.reignofplay.recall"
    compileSdkVersion flutter.compileSdkVersion
    ndkVersion = "26.1.10909125"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.reignofplay.recall"
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

    signingConfigs {
        release {
            keyAlias localProperties.getProperty('keyAlias') ?: ""
            keyPassword localProperties.getProperty('keyPassword') ?: ""
            storeFile file(localProperties.getProperty('storeFile') ?: "")
            storePassword localProperties.getProperty('storePassword') ?: ""
        }
    }


    buildFeatures {
        buildConfig true
    }

    buildTypes {
        release {
            // Enable ProGuard to shrink and obfuscate your code
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            // Configure signing for release builds
            signingConfig signingConfigs.release

            // Define the placeholder for ${applicationName}
            manifestPlaceholders = [applicationName: "io.flutter.app.FlutterApplication"]
            ndk {
                debugSymbolLevel 'FULL' // Generates full debug symbols
                abiFilters "armeabi-v7a", "arm64-v8a", "x86", "x86_64"
            }
        }
        debug {
            // Optional: Add placeholders for debug builds
            manifestPlaceholders = [applicationName: "io.flutter.app.FlutterApplication"]
        }
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.multidex:multidex:2.0.1'
}
